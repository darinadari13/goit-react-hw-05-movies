{"version":3,"file":"static/js/693.15f1dac5.chunk.js","mappings":"2NACA,EAAuB,mBAAvB,EAAqD,uB,SCEtC,SAASA,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACzBC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,aAEzB,OACE,gBAAIC,UAAWC,EAAf,WACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKN,KAEP,0BAAOA,KACP,0CAAkBC,OAIvB,CCbc,SAASM,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,eAAIL,UAAWC,EAAf,SACGI,EAAKC,KAAI,SAACV,GAAD,OAAW,SAACD,EAAD,CAAyBC,MAAOA,GAAjBA,EAAMW,GAAhC,KAIf,CCNc,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAON,EAAP,KAAaO,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBP,GACbQ,KAAKL,GACLM,OAAM,SAAAC,GAAG,OAAIL,EAASK,EAAIC,QAAjB,GACb,GAAE,CAACX,KAGJM,EAAAA,EAAAA,YAAU,WACHF,GACLQ,MAAMR,EACP,GAAE,CAACA,KAGF,+BACE,6BACGR,IAAQ,SAACD,EAAD,CAAMC,KAAMA,OAI5B,C,+LC5BKiB,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,KAHkB,uBACvBK,EADuB,EACvBA,KADuB,kBAOxBA,EAAKC,SAPmB,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTQ,MAAAA,KAJyB,uBACrBH,EADqB,EACrBA,KADqB,kBAQtBA,EAAKC,SARiB,2CAAH,sDAWfG,EAAe,mCAAG,WAAMzB,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bf,GAAM,CACzDmB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfZ,EAAe,mCAAG,WAAMP,GAAN,yFACNgB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bb,EAA9B,YAAiD,CACtEiB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKvB,MAPiB,2CAAH,sDAUf4B,EAAe,mCAAG,WAAMxB,GAAN,yFACNgB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bb,EAA9B,YAAiD,CACtEiB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","pages/CastPage/CastPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"listItem\":\"Cast_listItem__UvJjd\"};","import PropTypes from 'prop-types';\nimport css from './Cast.module.css';\n\nexport default function CastItem({ actor }) {\n  const { name, character, profile_path } = actor\n\n  return (\n    <li className={css.listItem}>\n      <img \n        src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n        alt={name}\n      />\n      <span>{name}</span>\n      <span>Charecter: {character}</span>\n    </li>\n  )\n\n}\n\nCastItem.propTypes = {\n  actor: PropTypes.object.isRequired,\n};","import PropTypes from 'prop-types';\nimport css from './Cast.module.css';\nimport CastItem from './CastItem';\n\nexport default function Cast({ cast }) {\n  return (\n    <ul className={css.list}>\n      {cast.map((actor) => <CastItem key={actor.id} actor={actor} />)}\n    </ul>\n  )\n\n}\n\nCast.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n\n","import {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport Cast from 'components/Cast/Cast';\n\nexport default function CastDetails() {  \n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(setCast)\n      .catch(err => setError(err.message))\n  }, [movieId]);\n\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  return (\n    <>\n      <section>\n        {cast && <Cast cast={cast} />}\n      </section>\n    </>\n  );\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25e4eeadea4cf520d825a9bf9fd0e85d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  \n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["CastItem","actor","name","character","profile_path","className","css","src","alt","Cast","cast","map","id","CastDetails","movieId","useParams","useState","setCast","error","setError","useEffect","getMovieCredits","then","catch","err","message","alert","BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","data","results","getMovieByQuery","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}