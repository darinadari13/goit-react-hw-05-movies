{"version":3,"file":"static/js/260.de7ac70c.chunk.js","mappings":"2NACA,EAAuB,qBAAvB,EAAuD,yBAAvD,EAAyF,uB,SCE1E,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC3BC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAEhB,OACE,gBAAIC,UAAWC,EAAf,WACE,kBAAMD,UAAWC,EAAjB,qBAAsCH,MACtC,0BAAOC,MAIZ,CCTc,SAASG,EAAT,GAA6B,IAAXL,EAAU,EAAVA,OAE/B,OACE,eAAIG,UAAWC,EAAf,SACGJ,EAAOM,KAAI,SAACC,GAAD,OAAS,SAACR,EAAD,CAAyBC,OAAQO,GAAhBA,EAAIC,GAA9B,KAIjB,CCPc,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAiBA,OAbAC,EAAAA,EAAAA,YAAU,YAERC,EAAAA,EAAAA,IAAgBP,GACbQ,KAAKL,GACLM,OAAM,SAAAC,GAAG,OAAIL,EAASK,EAAIC,QAAjB,GACb,GAAE,CAACX,KAGJM,EAAAA,EAAAA,YAAU,WACHF,GACLQ,MAAMR,EACP,GAAE,CAACA,KAGF,+BACE,6BACqB,IAAlBd,EAAOuB,QAAe,yDAA0CvB,IAAU,SAACK,EAAD,CAAQL,OAAQA,OAIlG,C,+LC/BKwB,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,KAHkB,uBACvBK,EADuB,EACvBA,KADuB,kBAOxBA,EAAKC,SAPmB,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTQ,MAAAA,KAJyB,uBACrBH,EADqB,EACrBA,KADqB,kBAQtBA,EAAKC,SARiB,2CAAH,sDAWfG,EAAe,mCAAG,WAAM1B,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BhB,GAAM,CACzDoB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfK,EAAe,mCAAG,WAAMzB,GAAN,yFACNiB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bd,EAA9B,YAAiD,CACtEkB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKM,MAPiB,2CAAH,sDAUfnB,EAAe,mCAAG,WAAMP,GAAN,yFACNiB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bd,EAA9B,YAAiD,CACtEkB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Review.module.css?8c12","components/Reviews/ReviewItem.jsx","components/Reviews/Review.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Review_list__twS+N\",\"listItem\":\"Review_listItem__-olvy\",\"author\":\"Review_author__fZw4a\"};","import PropTypes from 'prop-types';\nimport css from './Review.module.css';\n\nexport default function ReviewItem({ review }) {\n  const { author, content } = review;\n\n  return (\n    <li className={css.listItem}>\n      <span className={css.author}>Author: {author}</span>\n      <span>{content}</span>\n    </li>\n  )\n\n}\n\nReviewItem.propTypes = {\n  review: PropTypes.object.isRequired,\n};","import PropTypes from 'prop-types';\nimport css from './Review.module.css';\nimport ReviewItem from './ReviewItem';\n\nexport default function Review({ review }) {\n  \n  return (\n    <ul className={css.list}>\n      {review.map((rev) => <ReviewItem key={rev.id} review={rev} />)}\n    </ul>\n  )\n\n}\n\nReview.propTypes = {\n  review: PropTypes.array.isRequired,\n};\n\n","import {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport Review from 'components/Reviews/Review';\n\nexport default function Reviews() {  \n  const { movieId } = useParams();\n\n  const [review, setReview] = useState([]);\n  const [error, setError] = useState(null);\n\n\n\n  useEffect(() => {\n    \n    getMovieReviews(movieId)\n      .then(setReview)\n      .catch(err => setError(err.message))\n  }, [movieId]);\n\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  return (\n    <>\n      <section>\n        {review.length === 0 ? <span>Sorry, there is no reviews</span> : review && <Review review={review} />}\n      </section>\n    </>\n  );\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25e4eeadea4cf520d825a9bf9fd0e85d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  \n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["ReviewItem","review","author","content","className","css","Review","map","rev","id","Reviews","movieId","useParams","useState","setReview","error","setError","useEffect","getMovieReviews","then","catch","err","message","alert","length","BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","data","results","getMovieByQuery","query","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}